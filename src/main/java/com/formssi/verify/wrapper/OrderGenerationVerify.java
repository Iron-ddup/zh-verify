package com.formssi.verify.wrapper;

import io.reactivex.Flowable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
public class OrderGenerationVerify extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_GETBYID = "GetById";

    public static final String FUNC_RECONCILIATION = "reconciliation";

    public static final Event ORDERGENERATRECONCILIATIONEVENT_EVENT = new Event("OrderGeneratReconciliationEvent",
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected OrderGenerationVerify(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected OrderGenerationVerify(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected OrderGenerationVerify(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected OrderGenerationVerify(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> GetById(BigInteger _ordNo) {
        final Function function = new Function(FUNC_GETBYID,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_ordNo)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> reconciliation(BigInteger _from, BigInteger _ordNo, String _txnTyp, String _accNo, String _date, BigInteger _cusAmt, BigInteger _cusFee, BigInteger _totTimes, String _partnerCd, String _fqCaseNo) {
        final Function function = new Function(
                FUNC_RECONCILIATION, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_from),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_ordNo), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_txnTyp),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_accNo),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_date),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_cusAmt),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_cusFee),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_totTimes),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_partnerCd),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_fqCaseNo)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void reconciliation(BigInteger _from, BigInteger _ordNo, String _txnTyp, String _accNo, String _date, BigInteger _cusAmt, BigInteger _cusFee, BigInteger _totTimes, String _partnerCd, String _fqCaseNo, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_RECONCILIATION,
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_from),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_ordNo),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_txnTyp),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_accNo),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_date),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_cusAmt),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_cusFee),
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_totTimes),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_partnerCd),
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_fqCaseNo)),
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public List<OrderGeneratReconciliationEventEventResponse> getOrderGeneratReconciliationEventEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ORDERGENERATRECONCILIATIONEVENT_EVENT, transactionReceipt);
        ArrayList<OrderGeneratReconciliationEventEventResponse> responses = new ArrayList<OrderGeneratReconciliationEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OrderGeneratReconciliationEventEventResponse typedResponse = new OrderGeneratReconciliationEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._jsonStr = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OrderGeneratReconciliationEventEventResponse> orderGeneratReconciliationEventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, OrderGeneratReconciliationEventEventResponse>() {
            @Override
            public OrderGeneratReconciliationEventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ORDERGENERATRECONCILIATIONEVENT_EVENT, log);
                OrderGeneratReconciliationEventEventResponse typedResponse = new OrderGeneratReconciliationEventEventResponse();
                typedResponse.log = log;
                typedResponse._jsonStr = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OrderGeneratReconciliationEventEventResponse> orderGeneratReconciliationEventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ORDERGENERATRECONCILIATIONEVENT_EVENT));
        return orderGeneratReconciliationEventEventFlowable(filter);
    }

    @Deprecated
    public static OrderGenerationVerify load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new OrderGenerationVerify(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static OrderGenerationVerify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new OrderGenerationVerify(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static OrderGenerationVerify load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new OrderGenerationVerify(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static OrderGenerationVerify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new OrderGenerationVerify(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<OrderGenerationVerify> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(OrderGenerationVerify.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<OrderGenerationVerify> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(OrderGenerationVerify.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<OrderGenerationVerify> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(OrderGenerationVerify.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<OrderGenerationVerify> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(OrderGenerationVerify.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class OrderGeneratReconciliationEventEventResponse {
        public Log log;

        public String _jsonStr;
    }
}
